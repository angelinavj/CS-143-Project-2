Terminals unused in grammar

   IN
   LET
   DARROW
   ERROR


State 10 conflicts: 1 shift/reduce
State 16 conflicts: 1 shift/reduce
State 54 conflicts: 9 shift/reduce
State 56 conflicts: 2 reduce/reduce
State 58 conflicts: 9 shift/reduce
State 62 conflicts: 9 shift/reduce
State 76 conflicts: 9 shift/reduce
State 83 conflicts: 9 shift/reduce
State 86 conflicts: 9 shift/reduce
State 87 conflicts: 9 shift/reduce
State 88 conflicts: 9 shift/reduce
State 89 conflicts: 9 shift/reduce
State 90 conflicts: 9 shift/reduce
State 91 conflicts: 9 shift/reduce
State 101 conflicts: 2 reduce/reduce
State 116 conflicts: 2 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: class_list

    2 class_list: class ';'
    3           | class_list class ';'

    4 class: CLASS TYPEID '{' feature_list '}'
    5      | CLASS TYPEID INHERITS TYPEID '{' feature_list '}'

    6 feature_list: /* empty */
    7             | feature ';'
    8             | feature_list feature ';'

    9 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' expr '}'
   10        | OBJECTID ':' TYPEID expr
   11        | OBJECTID ':' TYPEID ASSIGN expr

   12 formal_list: formal
   13            | formal_list ',' formal

   14 formal: OBJECTID ':' TYPEID

   15 expr_list: expr ';'
   16          | expr_list expr ';'

   17 expr_comma_list: /* empty */
   18                | expr
   19                | expr_comma_list ',' expr

   20 expr: /* empty */
   21     | OBJECTID ASSIGN expr
   22     | expr '.' OBJECTID '(' expr_comma_list ')'
   23     | expr '@' TYPEID '.' OBJECTID '(' expr_comma_list ')'
   24     | OBJECTID '(' expr_comma_list ')'
   25     | IF expr THEN expr ELSE expr FI
   26     | WHILE expr LOOP expr POOL
   27     | '{' expr_list '}'
   28     | CASE expr OF case_list ESAC
   29     | NEW TYPEID
   30     | ISVOID expr
   31     | expr '+' expr
   32     | expr '-' expr
   33     | expr '*' expr
   34     | expr '/' expr
   35     | '~' expr
   36     | expr '<' expr
   37     | expr LE expr
   38     | expr '=' expr
   39     | NOT expr
   40     | '(' expr ')'
   41     | OBJECTID
   42     | INT_CONST
   43     | STR_CONST
   44     | BOOL_CONST

   45 case_list: case
   46          | case_list case

   47 case: OBJECTID ':' TYPEID ASSIGN expr ';'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 9 22 23 24 40
')' (41) 9 22 23 24 40
'*' (42) 33
'+' (43) 31
',' (44) 13 19
'-' (45) 32
'.' (46) 22 23
'/' (47) 34
':' (58) 9 10 11 14 47
';' (59) 2 3 7 8 15 16 47
'<' (60) 36
'=' (61) 38
'@' (64) 23
'{' (123) 4 5 9 27
'}' (125) 4 5 9 27
'~' (126) 35
error (256)
CLASS (258) 4 5
ELSE (259) 25
FI (260) 25
IF (261) 25
IN (262)
INHERITS (263) 5
LET (264)
LOOP (265) 26
POOL (266) 26
THEN (267) 25
WHILE (268) 26
CASE (269) 28
ESAC (270) 28
OF (271) 28
DARROW (272)
NEW (273) 29
ISVOID (274) 30
STR_CONST (275) 43
INT_CONST (276) 42
BOOL_CONST (277) 44
TYPEID (278) 4 5 9 10 11 14 23 29 47
OBJECTID (279) 9 10 11 14 21 22 23 24 41 47
ASSIGN (280) 11 21 47
NOT (281) 39
LE (282) 37
ERROR (283)


Nonterminals, with rules where they appear

$accept (45)
    on left: 0
program (46)
    on left: 1, on right: 0
class_list (47)
    on left: 2 3, on right: 1 3
class (48)
    on left: 4 5, on right: 2 3
feature_list (49)
    on left: 6 7 8, on right: 4 5 8
feature (50)
    on left: 9 10 11, on right: 7 8
formal_list (51)
    on left: 12 13, on right: 9 13
formal (52)
    on left: 14, on right: 12 13
expr_list (53)
    on left: 15 16, on right: 16 27
expr_comma_list (54)
    on left: 17 18 19, on right: 19 22 23 24
expr (55)
    on left: 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37
    38 39 40 41 42 43 44, on right: 9 10 11 15 16 18 19 21 22 23 25
    26 28 30 31 32 33 34 35 36 37 38 39 40 47
case_list (56)
    on left: 45 46, on right: 28 46
case (57)
    on left: 47, on right: 45 46


state 0

    0 $accept: . program $end

    CLASS  shift, and go to state 1

    program     go to state 2
    class_list  go to state 3
    class       go to state 4


state 1

    4 class: CLASS . TYPEID '{' feature_list '}'
    5      | CLASS . TYPEID INHERITS TYPEID '{' feature_list '}'

    TYPEID  shift, and go to state 5


state 2

    0 $accept: program . $end

    $end  shift, and go to state 6


state 3

    1 program: class_list .
    3 class_list: class_list . class ';'

    CLASS  shift, and go to state 1

    $default  reduce using rule 1 (program)

    class  go to state 7


state 4

    2 class_list: class . ';'

    ';'  shift, and go to state 8


state 5

    4 class: CLASS TYPEID . '{' feature_list '}'
    5      | CLASS TYPEID . INHERITS TYPEID '{' feature_list '}'

    INHERITS  shift, and go to state 9
    '{'       shift, and go to state 10


state 6

    0 $accept: program $end .

    $default  accept


state 7

    3 class_list: class_list class . ';'

    ';'  shift, and go to state 11


state 8

    2 class_list: class ';' .

    $default  reduce using rule 2 (class_list)


state 9

    5 class: CLASS TYPEID INHERITS . TYPEID '{' feature_list '}'

    TYPEID  shift, and go to state 12


state 10

    4 class: CLASS TYPEID '{' . feature_list '}'

    OBJECTID  shift, and go to state 13

    OBJECTID  [reduce using rule 6 (feature_list)]
    $default  reduce using rule 6 (feature_list)

    feature_list  go to state 14
    feature       go to state 15


state 11

    3 class_list: class_list class ';' .

    $default  reduce using rule 3 (class_list)


state 12

    5 class: CLASS TYPEID INHERITS TYPEID . '{' feature_list '}'

    '{'  shift, and go to state 16


state 13

    9 feature: OBJECTID . '(' formal_list ')' ':' TYPEID '{' expr '}'
   10        | OBJECTID . ':' TYPEID expr
   11        | OBJECTID . ':' TYPEID ASSIGN expr

    '('  shift, and go to state 17
    ':'  shift, and go to state 18


state 14

    4 class: CLASS TYPEID '{' feature_list . '}'
    8 feature_list: feature_list . feature ';'

    OBJECTID  shift, and go to state 13
    '}'       shift, and go to state 19

    feature  go to state 20


state 15

    7 feature_list: feature . ';'

    ';'  shift, and go to state 21


state 16

    5 class: CLASS TYPEID INHERITS TYPEID '{' . feature_list '}'

    OBJECTID  shift, and go to state 13

    OBJECTID  [reduce using rule 6 (feature_list)]
    $default  reduce using rule 6 (feature_list)

    feature_list  go to state 22
    feature       go to state 15


state 17

    9 feature: OBJECTID '(' . formal_list ')' ':' TYPEID '{' expr '}'

    OBJECTID  shift, and go to state 23

    formal_list  go to state 24
    formal       go to state 25


state 18

   10 feature: OBJECTID ':' . TYPEID expr
   11        | OBJECTID ':' . TYPEID ASSIGN expr

    TYPEID  shift, and go to state 26


state 19

    4 class: CLASS TYPEID '{' feature_list '}' .

    $default  reduce using rule 4 (class)


state 20

    8 feature_list: feature_list feature . ';'

    ';'  shift, and go to state 27


state 21

    7 feature_list: feature ';' .

    $default  reduce using rule 7 (feature_list)


state 22

    5 class: CLASS TYPEID INHERITS TYPEID '{' feature_list . '}'
    8 feature_list: feature_list . feature ';'

    OBJECTID  shift, and go to state 13
    '}'       shift, and go to state 28

    feature  go to state 20


state 23

   14 formal: OBJECTID . ':' TYPEID

    ':'  shift, and go to state 29


state 24

    9 feature: OBJECTID '(' formal_list . ')' ':' TYPEID '{' expr '}'
   13 formal_list: formal_list . ',' formal

    ')'  shift, and go to state 30
    ','  shift, and go to state 31


state 25

   12 formal_list: formal .

    $default  reduce using rule 12 (formal_list)


state 26

   10 feature: OBJECTID ':' TYPEID . expr
   11        | OBJECTID ':' TYPEID . ASSIGN expr

    IF          shift, and go to state 32
    WHILE       shift, and go to state 33
    CASE        shift, and go to state 34
    NEW         shift, and go to state 35
    ISVOID      shift, and go to state 36
    STR_CONST   shift, and go to state 37
    INT_CONST   shift, and go to state 38
    BOOL_CONST  shift, and go to state 39
    OBJECTID    shift, and go to state 40
    ASSIGN      shift, and go to state 41
    NOT         shift, and go to state 42
    '{'         shift, and go to state 43
    '('         shift, and go to state 44
    '~'         shift, and go to state 45

    $default  reduce using rule 20 (expr)

    expr  go to state 46


state 27

    8 feature_list: feature_list feature ';' .

    $default  reduce using rule 8 (feature_list)


state 28

    5 class: CLASS TYPEID INHERITS TYPEID '{' feature_list '}' .

    $default  reduce using rule 5 (class)


state 29

   14 formal: OBJECTID ':' . TYPEID

    TYPEID  shift, and go to state 47


state 30

    9 feature: OBJECTID '(' formal_list ')' . ':' TYPEID '{' expr '}'

    ':'  shift, and go to state 48


state 31

   13 formal_list: formal_list ',' . formal

    OBJECTID  shift, and go to state 23

    formal  go to state 49


state 32

   25 expr: IF . expr THEN expr ELSE expr FI

    IF          shift, and go to state 32
    WHILE       shift, and go to state 33
    CASE        shift, and go to state 34
    NEW         shift, and go to state 35
    ISVOID      shift, and go to state 36
    STR_CONST   shift, and go to state 37
    INT_CONST   shift, and go to state 38
    BOOL_CONST  shift, and go to state 39
    OBJECTID    shift, and go to state 40
    NOT         shift, and go to state 42
    '{'         shift, and go to state 43
    '('         shift, and go to state 44
    '~'         shift, and go to state 45

    $default  reduce using rule 20 (expr)

    expr  go to state 50


state 33

   26 expr: WHILE . expr LOOP expr POOL

    IF          shift, and go to state 32
    WHILE       shift, and go to state 33
    CASE        shift, and go to state 34
    NEW         shift, and go to state 35
    ISVOID      shift, and go to state 36
    STR_CONST   shift, and go to state 37
    INT_CONST   shift, and go to state 38
    BOOL_CONST  shift, and go to state 39
    OBJECTID    shift, and go to state 40
    NOT         shift, and go to state 42
    '{'         shift, and go to state 43
    '('         shift, and go to state 44
    '~'         shift, and go to state 45

    $default  reduce using rule 20 (expr)

    expr  go to state 51


state 34

   28 expr: CASE . expr OF case_list ESAC

    IF          shift, and go to state 32
    WHILE       shift, and go to state 33
    CASE        shift, and go to state 34
    NEW         shift, and go to state 35
    ISVOID      shift, and go to state 36
    STR_CONST   shift, and go to state 37
    INT_CONST   shift, and go to state 38
    BOOL_CONST  shift, and go to state 39
    OBJECTID    shift, and go to state 40
    NOT         shift, and go to state 42
    '{'         shift, and go to state 43
    '('         shift, and go to state 44
    '~'         shift, and go to state 45

    $default  reduce using rule 20 (expr)

    expr  go to state 52


state 35

   29 expr: NEW . TYPEID

    TYPEID  shift, and go to state 53


state 36

   30 expr: ISVOID . expr

    IF          shift, and go to state 32
    WHILE       shift, and go to state 33
    CASE        shift, and go to state 34
    NEW         shift, and go to state 35
    ISVOID      shift, and go to state 36
    STR_CONST   shift, and go to state 37
    INT_CONST   shift, and go to state 38
    BOOL_CONST  shift, and go to state 39
    OBJECTID    shift, and go to state 40
    NOT         shift, and go to state 42
    '{'         shift, and go to state 43
    '('         shift, and go to state 44
    '~'         shift, and go to state 45

    $default  reduce using rule 20 (expr)

    expr  go to state 54


state 37

   43 expr: STR_CONST .

    $default  reduce using rule 43 (expr)


state 38

   42 expr: INT_CONST .

    $default  reduce using rule 42 (expr)


state 39

   44 expr: BOOL_CONST .

    $default  reduce using rule 44 (expr)


state 40

   21 expr: OBJECTID . ASSIGN expr
   24     | OBJECTID . '(' expr_comma_list ')'
   41     | OBJECTID .

    ASSIGN  shift, and go to state 55
    '('     shift, and go to state 56

    $default  reduce using rule 41 (expr)


state 41

   11 feature: OBJECTID ':' TYPEID ASSIGN . expr

    IF          shift, and go to state 32
    WHILE       shift, and go to state 33
    CASE        shift, and go to state 34
    NEW         shift, and go to state 35
    ISVOID      shift, and go to state 36
    STR_CONST   shift, and go to state 37
    INT_CONST   shift, and go to state 38
    BOOL_CONST  shift, and go to state 39
    OBJECTID    shift, and go to state 40
    NOT         shift, and go to state 42
    '{'         shift, and go to state 43
    '('         shift, and go to state 44
    '~'         shift, and go to state 45

    $default  reduce using rule 20 (expr)

    expr  go to state 57


state 42

   39 expr: NOT . expr

    IF          shift, and go to state 32
    WHILE       shift, and go to state 33
    CASE        shift, and go to state 34
    NEW         shift, and go to state 35
    ISVOID      shift, and go to state 36
    STR_CONST   shift, and go to state 37
    INT_CONST   shift, and go to state 38
    BOOL_CONST  shift, and go to state 39
    OBJECTID    shift, and go to state 40
    NOT         shift, and go to state 42
    '{'         shift, and go to state 43
    '('         shift, and go to state 44
    '~'         shift, and go to state 45

    $default  reduce using rule 20 (expr)

    expr  go to state 58


state 43

   27 expr: '{' . expr_list '}'

    IF          shift, and go to state 32
    WHILE       shift, and go to state 33
    CASE        shift, and go to state 34
    NEW         shift, and go to state 35
    ISVOID      shift, and go to state 36
    STR_CONST   shift, and go to state 37
    INT_CONST   shift, and go to state 38
    BOOL_CONST  shift, and go to state 39
    OBJECTID    shift, and go to state 40
    NOT         shift, and go to state 42
    '{'         shift, and go to state 43
    '('         shift, and go to state 44
    '~'         shift, and go to state 45

    $default  reduce using rule 20 (expr)

    expr_list  go to state 59
    expr       go to state 60


state 44

   40 expr: '(' . expr ')'

    IF          shift, and go to state 32
    WHILE       shift, and go to state 33
    CASE        shift, and go to state 34
    NEW         shift, and go to state 35
    ISVOID      shift, and go to state 36
    STR_CONST   shift, and go to state 37
    INT_CONST   shift, and go to state 38
    BOOL_CONST  shift, and go to state 39
    OBJECTID    shift, and go to state 40
    NOT         shift, and go to state 42
    '{'         shift, and go to state 43
    '('         shift, and go to state 44
    '~'         shift, and go to state 45

    $default  reduce using rule 20 (expr)

    expr  go to state 61


state 45

   35 expr: '~' . expr

    IF          shift, and go to state 32
    WHILE       shift, and go to state 33
    CASE        shift, and go to state 34
    NEW         shift, and go to state 35
    ISVOID      shift, and go to state 36
    STR_CONST   shift, and go to state 37
    INT_CONST   shift, and go to state 38
    BOOL_CONST  shift, and go to state 39
    OBJECTID    shift, and go to state 40
    NOT         shift, and go to state 42
    '{'         shift, and go to state 43
    '('         shift, and go to state 44
    '~'         shift, and go to state 45

    $default  reduce using rule 20 (expr)

    expr  go to state 62


state 46

   10 feature: OBJECTID ':' TYPEID expr .
   22 expr: expr . '.' OBJECTID '(' expr_comma_list ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' expr_comma_list ')'
   31     | expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   36     | expr . '<' expr
   37     | expr . LE expr
   38     | expr . '=' expr

    LE   shift, and go to state 63
    '.'  shift, and go to state 64
    '@'  shift, and go to state 65
    '+'  shift, and go to state 66
    '-'  shift, and go to state 67
    '*'  shift, and go to state 68
    '/'  shift, and go to state 69
    '<'  shift, and go to state 70
    '='  shift, and go to state 71

    $default  reduce using rule 10 (feature)


state 47

   14 formal: OBJECTID ':' TYPEID .

    $default  reduce using rule 14 (formal)


state 48

    9 feature: OBJECTID '(' formal_list ')' ':' . TYPEID '{' expr '}'

    TYPEID  shift, and go to state 72


state 49

   13 formal_list: formal_list ',' formal .

    $default  reduce using rule 13 (formal_list)


state 50

   22 expr: expr . '.' OBJECTID '(' expr_comma_list ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' expr_comma_list ')'
   25     | IF expr . THEN expr ELSE expr FI
   31     | expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   36     | expr . '<' expr
   37     | expr . LE expr
   38     | expr . '=' expr

    THEN  shift, and go to state 73
    LE    shift, and go to state 63
    '.'   shift, and go to state 64
    '@'   shift, and go to state 65
    '+'   shift, and go to state 66
    '-'   shift, and go to state 67
    '*'   shift, and go to state 68
    '/'   shift, and go to state 69
    '<'   shift, and go to state 70
    '='   shift, and go to state 71


state 51

   22 expr: expr . '.' OBJECTID '(' expr_comma_list ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' expr_comma_list ')'
   26     | WHILE expr . LOOP expr POOL
   31     | expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   36     | expr . '<' expr
   37     | expr . LE expr
   38     | expr . '=' expr

    LOOP  shift, and go to state 74
    LE    shift, and go to state 63
    '.'   shift, and go to state 64
    '@'   shift, and go to state 65
    '+'   shift, and go to state 66
    '-'   shift, and go to state 67
    '*'   shift, and go to state 68
    '/'   shift, and go to state 69
    '<'   shift, and go to state 70
    '='   shift, and go to state 71


state 52

   22 expr: expr . '.' OBJECTID '(' expr_comma_list ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' expr_comma_list ')'
   28     | CASE expr . OF case_list ESAC
   31     | expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   36     | expr . '<' expr
   37     | expr . LE expr
   38     | expr . '=' expr

    OF   shift, and go to state 75
    LE   shift, and go to state 63
    '.'  shift, and go to state 64
    '@'  shift, and go to state 65
    '+'  shift, and go to state 66
    '-'  shift, and go to state 67
    '*'  shift, and go to state 68
    '/'  shift, and go to state 69
    '<'  shift, and go to state 70
    '='  shift, and go to state 71


state 53

   29 expr: NEW TYPEID .

    $default  reduce using rule 29 (expr)


state 54

   22 expr: expr . '.' OBJECTID '(' expr_comma_list ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' expr_comma_list ')'
   30     | ISVOID expr .
   31     | expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   36     | expr . '<' expr
   37     | expr . LE expr
   38     | expr . '=' expr

    LE   shift, and go to state 63
    '.'  shift, and go to state 64
    '@'  shift, and go to state 65
    '+'  shift, and go to state 66
    '-'  shift, and go to state 67
    '*'  shift, and go to state 68
    '/'  shift, and go to state 69
    '<'  shift, and go to state 70
    '='  shift, and go to state 71

    LE        [reduce using rule 30 (expr)]
    '.'       [reduce using rule 30 (expr)]
    '@'       [reduce using rule 30 (expr)]
    '+'       [reduce using rule 30 (expr)]
    '-'       [reduce using rule 30 (expr)]
    '*'       [reduce using rule 30 (expr)]
    '/'       [reduce using rule 30 (expr)]
    '<'       [reduce using rule 30 (expr)]
    '='       [reduce using rule 30 (expr)]
    $default  reduce using rule 30 (expr)


state 55

   21 expr: OBJECTID ASSIGN . expr

    IF          shift, and go to state 32
    WHILE       shift, and go to state 33
    CASE        shift, and go to state 34
    NEW         shift, and go to state 35
    ISVOID      shift, and go to state 36
    STR_CONST   shift, and go to state 37
    INT_CONST   shift, and go to state 38
    BOOL_CONST  shift, and go to state 39
    OBJECTID    shift, and go to state 40
    NOT         shift, and go to state 42
    '{'         shift, and go to state 43
    '('         shift, and go to state 44
    '~'         shift, and go to state 45

    $default  reduce using rule 20 (expr)

    expr  go to state 76


state 56

   24 expr: OBJECTID '(' . expr_comma_list ')'

    IF          shift, and go to state 32
    WHILE       shift, and go to state 33
    CASE        shift, and go to state 34
    NEW         shift, and go to state 35
    ISVOID      shift, and go to state 36
    STR_CONST   shift, and go to state 37
    INT_CONST   shift, and go to state 38
    BOOL_CONST  shift, and go to state 39
    OBJECTID    shift, and go to state 40
    NOT         shift, and go to state 42
    '{'         shift, and go to state 43
    '('         shift, and go to state 44
    '~'         shift, and go to state 45

    ')'       reduce using rule 17 (expr_comma_list)
    ')'       [reduce using rule 20 (expr)]
    ','       reduce using rule 17 (expr_comma_list)
    ','       [reduce using rule 20 (expr)]
    $default  reduce using rule 20 (expr)

    expr_comma_list  go to state 77
    expr             go to state 78


state 57

   11 feature: OBJECTID ':' TYPEID ASSIGN expr .
   22 expr: expr . '.' OBJECTID '(' expr_comma_list ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' expr_comma_list ')'
   31     | expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   36     | expr . '<' expr
   37     | expr . LE expr
   38     | expr . '=' expr

    LE   shift, and go to state 63
    '.'  shift, and go to state 64
    '@'  shift, and go to state 65
    '+'  shift, and go to state 66
    '-'  shift, and go to state 67
    '*'  shift, and go to state 68
    '/'  shift, and go to state 69
    '<'  shift, and go to state 70
    '='  shift, and go to state 71

    $default  reduce using rule 11 (feature)


state 58

   22 expr: expr . '.' OBJECTID '(' expr_comma_list ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' expr_comma_list ')'
   31     | expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   36     | expr . '<' expr
   37     | expr . LE expr
   38     | expr . '=' expr
   39     | NOT expr .

    LE   shift, and go to state 63
    '.'  shift, and go to state 64
    '@'  shift, and go to state 65
    '+'  shift, and go to state 66
    '-'  shift, and go to state 67
    '*'  shift, and go to state 68
    '/'  shift, and go to state 69
    '<'  shift, and go to state 70
    '='  shift, and go to state 71

    LE        [reduce using rule 39 (expr)]
    '.'       [reduce using rule 39 (expr)]
    '@'       [reduce using rule 39 (expr)]
    '+'       [reduce using rule 39 (expr)]
    '-'       [reduce using rule 39 (expr)]
    '*'       [reduce using rule 39 (expr)]
    '/'       [reduce using rule 39 (expr)]
    '<'       [reduce using rule 39 (expr)]
    '='       [reduce using rule 39 (expr)]
    $default  reduce using rule 39 (expr)


state 59

   16 expr_list: expr_list . expr ';'
   27 expr: '{' expr_list . '}'

    IF          shift, and go to state 32
    WHILE       shift, and go to state 33
    CASE        shift, and go to state 34
    NEW         shift, and go to state 35
    ISVOID      shift, and go to state 36
    STR_CONST   shift, and go to state 37
    INT_CONST   shift, and go to state 38
    BOOL_CONST  shift, and go to state 39
    OBJECTID    shift, and go to state 40
    NOT         shift, and go to state 42
    '{'         shift, and go to state 43
    '}'         shift, and go to state 79
    '('         shift, and go to state 44
    '~'         shift, and go to state 45

    $default  reduce using rule 20 (expr)

    expr  go to state 80


state 60

   15 expr_list: expr . ';'
   22 expr: expr . '.' OBJECTID '(' expr_comma_list ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' expr_comma_list ')'
   31     | expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   36     | expr . '<' expr
   37     | expr . LE expr
   38     | expr . '=' expr

    LE   shift, and go to state 63
    ';'  shift, and go to state 81
    '.'  shift, and go to state 64
    '@'  shift, and go to state 65
    '+'  shift, and go to state 66
    '-'  shift, and go to state 67
    '*'  shift, and go to state 68
    '/'  shift, and go to state 69
    '<'  shift, and go to state 70
    '='  shift, and go to state 71


state 61

   22 expr: expr . '.' OBJECTID '(' expr_comma_list ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' expr_comma_list ')'
   31     | expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   36     | expr . '<' expr
   37     | expr . LE expr
   38     | expr . '=' expr
   40     | '(' expr . ')'

    LE   shift, and go to state 63
    ')'  shift, and go to state 82
    '.'  shift, and go to state 64
    '@'  shift, and go to state 65
    '+'  shift, and go to state 66
    '-'  shift, and go to state 67
    '*'  shift, and go to state 68
    '/'  shift, and go to state 69
    '<'  shift, and go to state 70
    '='  shift, and go to state 71


state 62

   22 expr: expr . '.' OBJECTID '(' expr_comma_list ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' expr_comma_list ')'
   31     | expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   35     | '~' expr .
   36     | expr . '<' expr
   37     | expr . LE expr
   38     | expr . '=' expr

    LE   shift, and go to state 63
    '.'  shift, and go to state 64
    '@'  shift, and go to state 65
    '+'  shift, and go to state 66
    '-'  shift, and go to state 67
    '*'  shift, and go to state 68
    '/'  shift, and go to state 69
    '<'  shift, and go to state 70
    '='  shift, and go to state 71

    LE        [reduce using rule 35 (expr)]
    '.'       [reduce using rule 35 (expr)]
    '@'       [reduce using rule 35 (expr)]
    '+'       [reduce using rule 35 (expr)]
    '-'       [reduce using rule 35 (expr)]
    '*'       [reduce using rule 35 (expr)]
    '/'       [reduce using rule 35 (expr)]
    '<'       [reduce using rule 35 (expr)]
    '='       [reduce using rule 35 (expr)]
    $default  reduce using rule 35 (expr)


state 63

   37 expr: expr LE . expr

    IF          shift, and go to state 32
    WHILE       shift, and go to state 33
    CASE        shift, and go to state 34
    NEW         shift, and go to state 35
    ISVOID      shift, and go to state 36
    STR_CONST   shift, and go to state 37
    INT_CONST   shift, and go to state 38
    BOOL_CONST  shift, and go to state 39
    OBJECTID    shift, and go to state 40
    NOT         shift, and go to state 42
    '{'         shift, and go to state 43
    '('         shift, and go to state 44
    '~'         shift, and go to state 45

    $default  reduce using rule 20 (expr)

    expr  go to state 83


state 64

   22 expr: expr '.' . OBJECTID '(' expr_comma_list ')'

    OBJECTID  shift, and go to state 84


state 65

   23 expr: expr '@' . TYPEID '.' OBJECTID '(' expr_comma_list ')'

    TYPEID  shift, and go to state 85


state 66

   31 expr: expr '+' . expr

    IF          shift, and go to state 32
    WHILE       shift, and go to state 33
    CASE        shift, and go to state 34
    NEW         shift, and go to state 35
    ISVOID      shift, and go to state 36
    STR_CONST   shift, and go to state 37
    INT_CONST   shift, and go to state 38
    BOOL_CONST  shift, and go to state 39
    OBJECTID    shift, and go to state 40
    NOT         shift, and go to state 42
    '{'         shift, and go to state 43
    '('         shift, and go to state 44
    '~'         shift, and go to state 45

    $default  reduce using rule 20 (expr)

    expr  go to state 86


state 67

   32 expr: expr '-' . expr

    IF          shift, and go to state 32
    WHILE       shift, and go to state 33
    CASE        shift, and go to state 34
    NEW         shift, and go to state 35
    ISVOID      shift, and go to state 36
    STR_CONST   shift, and go to state 37
    INT_CONST   shift, and go to state 38
    BOOL_CONST  shift, and go to state 39
    OBJECTID    shift, and go to state 40
    NOT         shift, and go to state 42
    '{'         shift, and go to state 43
    '('         shift, and go to state 44
    '~'         shift, and go to state 45

    $default  reduce using rule 20 (expr)

    expr  go to state 87


state 68

   33 expr: expr '*' . expr

    IF          shift, and go to state 32
    WHILE       shift, and go to state 33
    CASE        shift, and go to state 34
    NEW         shift, and go to state 35
    ISVOID      shift, and go to state 36
    STR_CONST   shift, and go to state 37
    INT_CONST   shift, and go to state 38
    BOOL_CONST  shift, and go to state 39
    OBJECTID    shift, and go to state 40
    NOT         shift, and go to state 42
    '{'         shift, and go to state 43
    '('         shift, and go to state 44
    '~'         shift, and go to state 45

    $default  reduce using rule 20 (expr)

    expr  go to state 88


state 69

   34 expr: expr '/' . expr

    IF          shift, and go to state 32
    WHILE       shift, and go to state 33
    CASE        shift, and go to state 34
    NEW         shift, and go to state 35
    ISVOID      shift, and go to state 36
    STR_CONST   shift, and go to state 37
    INT_CONST   shift, and go to state 38
    BOOL_CONST  shift, and go to state 39
    OBJECTID    shift, and go to state 40
    NOT         shift, and go to state 42
    '{'         shift, and go to state 43
    '('         shift, and go to state 44
    '~'         shift, and go to state 45

    $default  reduce using rule 20 (expr)

    expr  go to state 89


state 70

   36 expr: expr '<' . expr

    IF          shift, and go to state 32
    WHILE       shift, and go to state 33
    CASE        shift, and go to state 34
    NEW         shift, and go to state 35
    ISVOID      shift, and go to state 36
    STR_CONST   shift, and go to state 37
    INT_CONST   shift, and go to state 38
    BOOL_CONST  shift, and go to state 39
    OBJECTID    shift, and go to state 40
    NOT         shift, and go to state 42
    '{'         shift, and go to state 43
    '('         shift, and go to state 44
    '~'         shift, and go to state 45

    $default  reduce using rule 20 (expr)

    expr  go to state 90


state 71

   38 expr: expr '=' . expr

    IF          shift, and go to state 32
    WHILE       shift, and go to state 33
    CASE        shift, and go to state 34
    NEW         shift, and go to state 35
    ISVOID      shift, and go to state 36
    STR_CONST   shift, and go to state 37
    INT_CONST   shift, and go to state 38
    BOOL_CONST  shift, and go to state 39
    OBJECTID    shift, and go to state 40
    NOT         shift, and go to state 42
    '{'         shift, and go to state 43
    '('         shift, and go to state 44
    '~'         shift, and go to state 45

    $default  reduce using rule 20 (expr)

    expr  go to state 91


state 72

    9 feature: OBJECTID '(' formal_list ')' ':' TYPEID . '{' expr '}'

    '{'  shift, and go to state 92


state 73

   25 expr: IF expr THEN . expr ELSE expr FI

    IF          shift, and go to state 32
    WHILE       shift, and go to state 33
    CASE        shift, and go to state 34
    NEW         shift, and go to state 35
    ISVOID      shift, and go to state 36
    STR_CONST   shift, and go to state 37
    INT_CONST   shift, and go to state 38
    BOOL_CONST  shift, and go to state 39
    OBJECTID    shift, and go to state 40
    NOT         shift, and go to state 42
    '{'         shift, and go to state 43
    '('         shift, and go to state 44
    '~'         shift, and go to state 45

    $default  reduce using rule 20 (expr)

    expr  go to state 93


state 74

   26 expr: WHILE expr LOOP . expr POOL

    IF          shift, and go to state 32
    WHILE       shift, and go to state 33
    CASE        shift, and go to state 34
    NEW         shift, and go to state 35
    ISVOID      shift, and go to state 36
    STR_CONST   shift, and go to state 37
    INT_CONST   shift, and go to state 38
    BOOL_CONST  shift, and go to state 39
    OBJECTID    shift, and go to state 40
    NOT         shift, and go to state 42
    '{'         shift, and go to state 43
    '('         shift, and go to state 44
    '~'         shift, and go to state 45

    $default  reduce using rule 20 (expr)

    expr  go to state 94


state 75

   28 expr: CASE expr OF . case_list ESAC

    OBJECTID  shift, and go to state 95

    case_list  go to state 96
    case       go to state 97


state 76

   21 expr: OBJECTID ASSIGN expr .
   22     | expr . '.' OBJECTID '(' expr_comma_list ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' expr_comma_list ')'
   31     | expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   36     | expr . '<' expr
   37     | expr . LE expr
   38     | expr . '=' expr

    LE   shift, and go to state 63
    '.'  shift, and go to state 64
    '@'  shift, and go to state 65
    '+'  shift, and go to state 66
    '-'  shift, and go to state 67
    '*'  shift, and go to state 68
    '/'  shift, and go to state 69
    '<'  shift, and go to state 70
    '='  shift, and go to state 71

    LE        [reduce using rule 21 (expr)]
    '.'       [reduce using rule 21 (expr)]
    '@'       [reduce using rule 21 (expr)]
    '+'       [reduce using rule 21 (expr)]
    '-'       [reduce using rule 21 (expr)]
    '*'       [reduce using rule 21 (expr)]
    '/'       [reduce using rule 21 (expr)]
    '<'       [reduce using rule 21 (expr)]
    '='       [reduce using rule 21 (expr)]
    $default  reduce using rule 21 (expr)


state 77

   19 expr_comma_list: expr_comma_list . ',' expr
   24 expr: OBJECTID '(' expr_comma_list . ')'

    ')'  shift, and go to state 98
    ','  shift, and go to state 99


state 78

   18 expr_comma_list: expr .
   22 expr: expr . '.' OBJECTID '(' expr_comma_list ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' expr_comma_list ')'
   31     | expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   36     | expr . '<' expr
   37     | expr . LE expr
   38     | expr . '=' expr

    LE   shift, and go to state 63
    '.'  shift, and go to state 64
    '@'  shift, and go to state 65
    '+'  shift, and go to state 66
    '-'  shift, and go to state 67
    '*'  shift, and go to state 68
    '/'  shift, and go to state 69
    '<'  shift, and go to state 70
    '='  shift, and go to state 71

    $default  reduce using rule 18 (expr_comma_list)


state 79

   27 expr: '{' expr_list '}' .

    $default  reduce using rule 27 (expr)


state 80

   16 expr_list: expr_list expr . ';'
   22 expr: expr . '.' OBJECTID '(' expr_comma_list ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' expr_comma_list ')'
   31     | expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   36     | expr . '<' expr
   37     | expr . LE expr
   38     | expr . '=' expr

    LE   shift, and go to state 63
    ';'  shift, and go to state 100
    '.'  shift, and go to state 64
    '@'  shift, and go to state 65
    '+'  shift, and go to state 66
    '-'  shift, and go to state 67
    '*'  shift, and go to state 68
    '/'  shift, and go to state 69
    '<'  shift, and go to state 70
    '='  shift, and go to state 71


state 81

   15 expr_list: expr ';' .

    $default  reduce using rule 15 (expr_list)


state 82

   40 expr: '(' expr ')' .

    $default  reduce using rule 40 (expr)


state 83

   22 expr: expr . '.' OBJECTID '(' expr_comma_list ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' expr_comma_list ')'
   31     | expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   36     | expr . '<' expr
   37     | expr . LE expr
   37     | expr LE expr .
   38     | expr . '=' expr

    LE   shift, and go to state 63
    '.'  shift, and go to state 64
    '@'  shift, and go to state 65
    '+'  shift, and go to state 66
    '-'  shift, and go to state 67
    '*'  shift, and go to state 68
    '/'  shift, and go to state 69
    '<'  shift, and go to state 70
    '='  shift, and go to state 71

    LE        [reduce using rule 37 (expr)]
    '.'       [reduce using rule 37 (expr)]
    '@'       [reduce using rule 37 (expr)]
    '+'       [reduce using rule 37 (expr)]
    '-'       [reduce using rule 37 (expr)]
    '*'       [reduce using rule 37 (expr)]
    '/'       [reduce using rule 37 (expr)]
    '<'       [reduce using rule 37 (expr)]
    '='       [reduce using rule 37 (expr)]
    $default  reduce using rule 37 (expr)


state 84

   22 expr: expr '.' OBJECTID . '(' expr_comma_list ')'

    '('  shift, and go to state 101


state 85

   23 expr: expr '@' TYPEID . '.' OBJECTID '(' expr_comma_list ')'

    '.'  shift, and go to state 102


state 86

   22 expr: expr . '.' OBJECTID '(' expr_comma_list ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' expr_comma_list ')'
   31     | expr . '+' expr
   31     | expr '+' expr .
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   36     | expr . '<' expr
   37     | expr . LE expr
   38     | expr . '=' expr

    LE   shift, and go to state 63
    '.'  shift, and go to state 64
    '@'  shift, and go to state 65
    '+'  shift, and go to state 66
    '-'  shift, and go to state 67
    '*'  shift, and go to state 68
    '/'  shift, and go to state 69
    '<'  shift, and go to state 70
    '='  shift, and go to state 71

    LE        [reduce using rule 31 (expr)]
    '.'       [reduce using rule 31 (expr)]
    '@'       [reduce using rule 31 (expr)]
    '+'       [reduce using rule 31 (expr)]
    '-'       [reduce using rule 31 (expr)]
    '*'       [reduce using rule 31 (expr)]
    '/'       [reduce using rule 31 (expr)]
    '<'       [reduce using rule 31 (expr)]
    '='       [reduce using rule 31 (expr)]
    $default  reduce using rule 31 (expr)


state 87

   22 expr: expr . '.' OBJECTID '(' expr_comma_list ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' expr_comma_list ')'
   31     | expr . '+' expr
   32     | expr . '-' expr
   32     | expr '-' expr .
   33     | expr . '*' expr
   34     | expr . '/' expr
   36     | expr . '<' expr
   37     | expr . LE expr
   38     | expr . '=' expr

    LE   shift, and go to state 63
    '.'  shift, and go to state 64
    '@'  shift, and go to state 65
    '+'  shift, and go to state 66
    '-'  shift, and go to state 67
    '*'  shift, and go to state 68
    '/'  shift, and go to state 69
    '<'  shift, and go to state 70
    '='  shift, and go to state 71

    LE        [reduce using rule 32 (expr)]
    '.'       [reduce using rule 32 (expr)]
    '@'       [reduce using rule 32 (expr)]
    '+'       [reduce using rule 32 (expr)]
    '-'       [reduce using rule 32 (expr)]
    '*'       [reduce using rule 32 (expr)]
    '/'       [reduce using rule 32 (expr)]
    '<'       [reduce using rule 32 (expr)]
    '='       [reduce using rule 32 (expr)]
    $default  reduce using rule 32 (expr)


state 88

   22 expr: expr . '.' OBJECTID '(' expr_comma_list ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' expr_comma_list ')'
   31     | expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   33     | expr '*' expr .
   34     | expr . '/' expr
   36     | expr . '<' expr
   37     | expr . LE expr
   38     | expr . '=' expr

    LE   shift, and go to state 63
    '.'  shift, and go to state 64
    '@'  shift, and go to state 65
    '+'  shift, and go to state 66
    '-'  shift, and go to state 67
    '*'  shift, and go to state 68
    '/'  shift, and go to state 69
    '<'  shift, and go to state 70
    '='  shift, and go to state 71

    LE        [reduce using rule 33 (expr)]
    '.'       [reduce using rule 33 (expr)]
    '@'       [reduce using rule 33 (expr)]
    '+'       [reduce using rule 33 (expr)]
    '-'       [reduce using rule 33 (expr)]
    '*'       [reduce using rule 33 (expr)]
    '/'       [reduce using rule 33 (expr)]
    '<'       [reduce using rule 33 (expr)]
    '='       [reduce using rule 33 (expr)]
    $default  reduce using rule 33 (expr)


state 89

   22 expr: expr . '.' OBJECTID '(' expr_comma_list ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' expr_comma_list ')'
   31     | expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   34     | expr '/' expr .
   36     | expr . '<' expr
   37     | expr . LE expr
   38     | expr . '=' expr

    LE   shift, and go to state 63
    '.'  shift, and go to state 64
    '@'  shift, and go to state 65
    '+'  shift, and go to state 66
    '-'  shift, and go to state 67
    '*'  shift, and go to state 68
    '/'  shift, and go to state 69
    '<'  shift, and go to state 70
    '='  shift, and go to state 71

    LE        [reduce using rule 34 (expr)]
    '.'       [reduce using rule 34 (expr)]
    '@'       [reduce using rule 34 (expr)]
    '+'       [reduce using rule 34 (expr)]
    '-'       [reduce using rule 34 (expr)]
    '*'       [reduce using rule 34 (expr)]
    '/'       [reduce using rule 34 (expr)]
    '<'       [reduce using rule 34 (expr)]
    '='       [reduce using rule 34 (expr)]
    $default  reduce using rule 34 (expr)


state 90

   22 expr: expr . '.' OBJECTID '(' expr_comma_list ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' expr_comma_list ')'
   31     | expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   36     | expr . '<' expr
   36     | expr '<' expr .
   37     | expr . LE expr
   38     | expr . '=' expr

    LE   shift, and go to state 63
    '.'  shift, and go to state 64
    '@'  shift, and go to state 65
    '+'  shift, and go to state 66
    '-'  shift, and go to state 67
    '*'  shift, and go to state 68
    '/'  shift, and go to state 69
    '<'  shift, and go to state 70
    '='  shift, and go to state 71

    LE        [reduce using rule 36 (expr)]
    '.'       [reduce using rule 36 (expr)]
    '@'       [reduce using rule 36 (expr)]
    '+'       [reduce using rule 36 (expr)]
    '-'       [reduce using rule 36 (expr)]
    '*'       [reduce using rule 36 (expr)]
    '/'       [reduce using rule 36 (expr)]
    '<'       [reduce using rule 36 (expr)]
    '='       [reduce using rule 36 (expr)]
    $default  reduce using rule 36 (expr)


state 91

   22 expr: expr . '.' OBJECTID '(' expr_comma_list ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' expr_comma_list ')'
   31     | expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   36     | expr . '<' expr
   37     | expr . LE expr
   38     | expr . '=' expr
   38     | expr '=' expr .

    LE   shift, and go to state 63
    '.'  shift, and go to state 64
    '@'  shift, and go to state 65
    '+'  shift, and go to state 66
    '-'  shift, and go to state 67
    '*'  shift, and go to state 68
    '/'  shift, and go to state 69
    '<'  shift, and go to state 70
    '='  shift, and go to state 71

    LE        [reduce using rule 38 (expr)]
    '.'       [reduce using rule 38 (expr)]
    '@'       [reduce using rule 38 (expr)]
    '+'       [reduce using rule 38 (expr)]
    '-'       [reduce using rule 38 (expr)]
    '*'       [reduce using rule 38 (expr)]
    '/'       [reduce using rule 38 (expr)]
    '<'       [reduce using rule 38 (expr)]
    '='       [reduce using rule 38 (expr)]
    $default  reduce using rule 38 (expr)


state 92

    9 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' . expr '}'

    IF          shift, and go to state 32
    WHILE       shift, and go to state 33
    CASE        shift, and go to state 34
    NEW         shift, and go to state 35
    ISVOID      shift, and go to state 36
    STR_CONST   shift, and go to state 37
    INT_CONST   shift, and go to state 38
    BOOL_CONST  shift, and go to state 39
    OBJECTID    shift, and go to state 40
    NOT         shift, and go to state 42
    '{'         shift, and go to state 43
    '('         shift, and go to state 44
    '~'         shift, and go to state 45

    $default  reduce using rule 20 (expr)

    expr  go to state 103


state 93

   22 expr: expr . '.' OBJECTID '(' expr_comma_list ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' expr_comma_list ')'
   25     | IF expr THEN expr . ELSE expr FI
   31     | expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   36     | expr . '<' expr
   37     | expr . LE expr
   38     | expr . '=' expr

    ELSE  shift, and go to state 104
    LE    shift, and go to state 63
    '.'   shift, and go to state 64
    '@'   shift, and go to state 65
    '+'   shift, and go to state 66
    '-'   shift, and go to state 67
    '*'   shift, and go to state 68
    '/'   shift, and go to state 69
    '<'   shift, and go to state 70
    '='   shift, and go to state 71


state 94

   22 expr: expr . '.' OBJECTID '(' expr_comma_list ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' expr_comma_list ')'
   26     | WHILE expr LOOP expr . POOL
   31     | expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   36     | expr . '<' expr
   37     | expr . LE expr
   38     | expr . '=' expr

    POOL  shift, and go to state 105
    LE    shift, and go to state 63
    '.'   shift, and go to state 64
    '@'   shift, and go to state 65
    '+'   shift, and go to state 66
    '-'   shift, and go to state 67
    '*'   shift, and go to state 68
    '/'   shift, and go to state 69
    '<'   shift, and go to state 70
    '='   shift, and go to state 71


state 95

   47 case: OBJECTID . ':' TYPEID ASSIGN expr ';'

    ':'  shift, and go to state 106


state 96

   28 expr: CASE expr OF case_list . ESAC
   46 case_list: case_list . case

    ESAC      shift, and go to state 107
    OBJECTID  shift, and go to state 95

    case  go to state 108


state 97

   45 case_list: case .

    $default  reduce using rule 45 (case_list)


state 98

   24 expr: OBJECTID '(' expr_comma_list ')' .

    $default  reduce using rule 24 (expr)


state 99

   19 expr_comma_list: expr_comma_list ',' . expr

    IF          shift, and go to state 32
    WHILE       shift, and go to state 33
    CASE        shift, and go to state 34
    NEW         shift, and go to state 35
    ISVOID      shift, and go to state 36
    STR_CONST   shift, and go to state 37
    INT_CONST   shift, and go to state 38
    BOOL_CONST  shift, and go to state 39
    OBJECTID    shift, and go to state 40
    NOT         shift, and go to state 42
    '{'         shift, and go to state 43
    '('         shift, and go to state 44
    '~'         shift, and go to state 45

    $default  reduce using rule 20 (expr)

    expr  go to state 109


state 100

   16 expr_list: expr_list expr ';' .

    $default  reduce using rule 16 (expr_list)


state 101

   22 expr: expr '.' OBJECTID '(' . expr_comma_list ')'

    IF          shift, and go to state 32
    WHILE       shift, and go to state 33
    CASE        shift, and go to state 34
    NEW         shift, and go to state 35
    ISVOID      shift, and go to state 36
    STR_CONST   shift, and go to state 37
    INT_CONST   shift, and go to state 38
    BOOL_CONST  shift, and go to state 39
    OBJECTID    shift, and go to state 40
    NOT         shift, and go to state 42
    '{'         shift, and go to state 43
    '('         shift, and go to state 44
    '~'         shift, and go to state 45

    ')'       reduce using rule 17 (expr_comma_list)
    ')'       [reduce using rule 20 (expr)]
    ','       reduce using rule 17 (expr_comma_list)
    ','       [reduce using rule 20 (expr)]
    $default  reduce using rule 20 (expr)

    expr_comma_list  go to state 110
    expr             go to state 78


state 102

   23 expr: expr '@' TYPEID '.' . OBJECTID '(' expr_comma_list ')'

    OBJECTID  shift, and go to state 111


state 103

    9 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' expr . '}'
   22 expr: expr . '.' OBJECTID '(' expr_comma_list ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' expr_comma_list ')'
   31     | expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   36     | expr . '<' expr
   37     | expr . LE expr
   38     | expr . '=' expr

    LE   shift, and go to state 63
    '}'  shift, and go to state 112
    '.'  shift, and go to state 64
    '@'  shift, and go to state 65
    '+'  shift, and go to state 66
    '-'  shift, and go to state 67
    '*'  shift, and go to state 68
    '/'  shift, and go to state 69
    '<'  shift, and go to state 70
    '='  shift, and go to state 71


state 104

   25 expr: IF expr THEN expr ELSE . expr FI

    IF          shift, and go to state 32
    WHILE       shift, and go to state 33
    CASE        shift, and go to state 34
    NEW         shift, and go to state 35
    ISVOID      shift, and go to state 36
    STR_CONST   shift, and go to state 37
    INT_CONST   shift, and go to state 38
    BOOL_CONST  shift, and go to state 39
    OBJECTID    shift, and go to state 40
    NOT         shift, and go to state 42
    '{'         shift, and go to state 43
    '('         shift, and go to state 44
    '~'         shift, and go to state 45

    $default  reduce using rule 20 (expr)

    expr  go to state 113


state 105

   26 expr: WHILE expr LOOP expr POOL .

    $default  reduce using rule 26 (expr)


state 106

   47 case: OBJECTID ':' . TYPEID ASSIGN expr ';'

    TYPEID  shift, and go to state 114


state 107

   28 expr: CASE expr OF case_list ESAC .

    $default  reduce using rule 28 (expr)


state 108

   46 case_list: case_list case .

    $default  reduce using rule 46 (case_list)


state 109

   19 expr_comma_list: expr_comma_list ',' expr .
   22 expr: expr . '.' OBJECTID '(' expr_comma_list ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' expr_comma_list ')'
   31     | expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   36     | expr . '<' expr
   37     | expr . LE expr
   38     | expr . '=' expr

    LE   shift, and go to state 63
    '.'  shift, and go to state 64
    '@'  shift, and go to state 65
    '+'  shift, and go to state 66
    '-'  shift, and go to state 67
    '*'  shift, and go to state 68
    '/'  shift, and go to state 69
    '<'  shift, and go to state 70
    '='  shift, and go to state 71

    $default  reduce using rule 19 (expr_comma_list)


state 110

   19 expr_comma_list: expr_comma_list . ',' expr
   22 expr: expr '.' OBJECTID '(' expr_comma_list . ')'

    ')'  shift, and go to state 115
    ','  shift, and go to state 99


state 111

   23 expr: expr '@' TYPEID '.' OBJECTID . '(' expr_comma_list ')'

    '('  shift, and go to state 116


state 112

    9 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' expr '}' .

    $default  reduce using rule 9 (feature)


state 113

   22 expr: expr . '.' OBJECTID '(' expr_comma_list ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' expr_comma_list ')'
   25     | IF expr THEN expr ELSE expr . FI
   31     | expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   36     | expr . '<' expr
   37     | expr . LE expr
   38     | expr . '=' expr

    FI   shift, and go to state 117
    LE   shift, and go to state 63
    '.'  shift, and go to state 64
    '@'  shift, and go to state 65
    '+'  shift, and go to state 66
    '-'  shift, and go to state 67
    '*'  shift, and go to state 68
    '/'  shift, and go to state 69
    '<'  shift, and go to state 70
    '='  shift, and go to state 71


state 114

   47 case: OBJECTID ':' TYPEID . ASSIGN expr ';'

    ASSIGN  shift, and go to state 118


state 115

   22 expr: expr '.' OBJECTID '(' expr_comma_list ')' .

    $default  reduce using rule 22 (expr)


state 116

   23 expr: expr '@' TYPEID '.' OBJECTID '(' . expr_comma_list ')'

    IF          shift, and go to state 32
    WHILE       shift, and go to state 33
    CASE        shift, and go to state 34
    NEW         shift, and go to state 35
    ISVOID      shift, and go to state 36
    STR_CONST   shift, and go to state 37
    INT_CONST   shift, and go to state 38
    BOOL_CONST  shift, and go to state 39
    OBJECTID    shift, and go to state 40
    NOT         shift, and go to state 42
    '{'         shift, and go to state 43
    '('         shift, and go to state 44
    '~'         shift, and go to state 45

    ')'       reduce using rule 17 (expr_comma_list)
    ')'       [reduce using rule 20 (expr)]
    ','       reduce using rule 17 (expr_comma_list)
    ','       [reduce using rule 20 (expr)]
    $default  reduce using rule 20 (expr)

    expr_comma_list  go to state 119
    expr             go to state 78


state 117

   25 expr: IF expr THEN expr ELSE expr FI .

    $default  reduce using rule 25 (expr)


state 118

   47 case: OBJECTID ':' TYPEID ASSIGN . expr ';'

    IF          shift, and go to state 32
    WHILE       shift, and go to state 33
    CASE        shift, and go to state 34
    NEW         shift, and go to state 35
    ISVOID      shift, and go to state 36
    STR_CONST   shift, and go to state 37
    INT_CONST   shift, and go to state 38
    BOOL_CONST  shift, and go to state 39
    OBJECTID    shift, and go to state 40
    NOT         shift, and go to state 42
    '{'         shift, and go to state 43
    '('         shift, and go to state 44
    '~'         shift, and go to state 45

    $default  reduce using rule 20 (expr)

    expr  go to state 120


state 119

   19 expr_comma_list: expr_comma_list . ',' expr
   23 expr: expr '@' TYPEID '.' OBJECTID '(' expr_comma_list . ')'

    ')'  shift, and go to state 121
    ','  shift, and go to state 99


state 120

   22 expr: expr . '.' OBJECTID '(' expr_comma_list ')'
   23     | expr . '@' TYPEID '.' OBJECTID '(' expr_comma_list ')'
   31     | expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   36     | expr . '<' expr
   37     | expr . LE expr
   38     | expr . '=' expr
   47 case: OBJECTID ':' TYPEID ASSIGN expr . ';'

    LE   shift, and go to state 63
    ';'  shift, and go to state 122
    '.'  shift, and go to state 64
    '@'  shift, and go to state 65
    '+'  shift, and go to state 66
    '-'  shift, and go to state 67
    '*'  shift, and go to state 68
    '/'  shift, and go to state 69
    '<'  shift, and go to state 70
    '='  shift, and go to state 71


state 121

   23 expr: expr '@' TYPEID '.' OBJECTID '(' expr_comma_list ')' .

    $default  reduce using rule 23 (expr)


state 122

   47 case: OBJECTID ':' TYPEID ASSIGN expr ';' .

    $default  reduce using rule 47 (case)
