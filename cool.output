Terminals unused in grammar

   ELSE
   FI
   IF
   IN
   LET
   LOOP
   POOL
   THEN
   WHILE
   CASE
   ESAC
   OF
   DARROW
   NEW
   ISVOID
   STR_CONST
   INT_CONST
   BOOL_CONST
   NOT
   LE
   ERROR


State 9 conflicts: 1 shift/reduce
State 14 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: class_list

    2 class_list: class
    3           | class_list class

    4 class: CLASS TYPEID '{' feature_list '}'
    5      | CLASS TYPEID INHERITS TYPEID '{' feature_list '}'

    6 feature_list: /* empty */
    7             | feature ';'
    8             | feature_list feature ';'

    9 feature: OBJECTID '(' dummy_formal_list ')' ':' TYPEID '{' dummy_expr '}'
   10        | OBJECTID ':' TYPEID dummy_expr
   11        | OBJECTID ':' TYPEID ASSIGN dummy_expr

   12 dummy_formal_list: /* empty */

   13 dummy_expr: /* empty */


Terminals, with rules where they appear

$end (0) 0
'(' (40) 9
')' (41) 9
':' (58) 9 10 11
';' (59) 7 8
'{' (123) 4 5 9
'}' (125) 4 5 9
error (256)
CLASS (258) 4 5
ELSE (259)
FI (260)
IF (261)
IN (262)
INHERITS (263) 5
LET (264)
LOOP (265)
POOL (266)
THEN (267)
WHILE (268)
CASE (269)
ESAC (270)
OF (271)
DARROW (272)
NEW (273)
ISVOID (274)
STR_CONST (275)
INT_CONST (276)
BOOL_CONST (277)
TYPEID (278) 4 5 9 10 11
OBJECTID (279) 9 10 11
ASSIGN (280) 11
NOT (281)
LE (282)
ERROR (283)


Nonterminals, with rules where they appear

$accept (35)
    on left: 0
program (36)
    on left: 1, on right: 0
class_list (37)
    on left: 2 3, on right: 1 3
class (38)
    on left: 4 5, on right: 2 3
feature_list (39)
    on left: 6 7 8, on right: 4 5 8
feature (40)
    on left: 9 10 11, on right: 7 8
dummy_formal_list (41)
    on left: 12, on right: 9
dummy_expr (42)
    on left: 13, on right: 9 10 11


state 0

    0 $accept: . program $end

    CLASS  shift, and go to state 1

    program     go to state 2
    class_list  go to state 3
    class       go to state 4


state 1

    4 class: CLASS . TYPEID '{' feature_list '}'
    5      | CLASS . TYPEID INHERITS TYPEID '{' feature_list '}'

    TYPEID  shift, and go to state 5


state 2

    0 $accept: program . $end

    $end  shift, and go to state 6


state 3

    1 program: class_list .
    3 class_list: class_list . class

    CLASS  shift, and go to state 1

    $default  reduce using rule 1 (program)

    class  go to state 7


state 4

    2 class_list: class .

    $default  reduce using rule 2 (class_list)


state 5

    4 class: CLASS TYPEID . '{' feature_list '}'
    5      | CLASS TYPEID . INHERITS TYPEID '{' feature_list '}'

    INHERITS  shift, and go to state 8
    '{'       shift, and go to state 9


state 6

    0 $accept: program $end .

    $default  accept


state 7

    3 class_list: class_list class .

    $default  reduce using rule 3 (class_list)


state 8

    5 class: CLASS TYPEID INHERITS . TYPEID '{' feature_list '}'

    TYPEID  shift, and go to state 10


state 9

    4 class: CLASS TYPEID '{' . feature_list '}'

    OBJECTID  shift, and go to state 11

    OBJECTID  [reduce using rule 6 (feature_list)]
    $default  reduce using rule 6 (feature_list)

    feature_list  go to state 12
    feature       go to state 13


state 10

    5 class: CLASS TYPEID INHERITS TYPEID . '{' feature_list '}'

    '{'  shift, and go to state 14


state 11

    9 feature: OBJECTID . '(' dummy_formal_list ')' ':' TYPEID '{' dummy_expr '}'
   10        | OBJECTID . ':' TYPEID dummy_expr
   11        | OBJECTID . ':' TYPEID ASSIGN dummy_expr

    '('  shift, and go to state 15
    ':'  shift, and go to state 16


state 12

    4 class: CLASS TYPEID '{' feature_list . '}'
    8 feature_list: feature_list . feature ';'

    OBJECTID  shift, and go to state 11
    '}'       shift, and go to state 17

    feature  go to state 18


state 13

    7 feature_list: feature . ';'

    ';'  shift, and go to state 19


state 14

    5 class: CLASS TYPEID INHERITS TYPEID '{' . feature_list '}'

    OBJECTID  shift, and go to state 11

    OBJECTID  [reduce using rule 6 (feature_list)]
    $default  reduce using rule 6 (feature_list)

    feature_list  go to state 20
    feature       go to state 13


state 15

    9 feature: OBJECTID '(' . dummy_formal_list ')' ':' TYPEID '{' dummy_expr '}'

    $default  reduce using rule 12 (dummy_formal_list)

    dummy_formal_list  go to state 21


state 16

   10 feature: OBJECTID ':' . TYPEID dummy_expr
   11        | OBJECTID ':' . TYPEID ASSIGN dummy_expr

    TYPEID  shift, and go to state 22


state 17

    4 class: CLASS TYPEID '{' feature_list '}' .

    $default  reduce using rule 4 (class)


state 18

    8 feature_list: feature_list feature . ';'

    ';'  shift, and go to state 23


state 19

    7 feature_list: feature ';' .

    $default  reduce using rule 7 (feature_list)


state 20

    5 class: CLASS TYPEID INHERITS TYPEID '{' feature_list . '}'
    8 feature_list: feature_list . feature ';'

    OBJECTID  shift, and go to state 11
    '}'       shift, and go to state 24

    feature  go to state 18


state 21

    9 feature: OBJECTID '(' dummy_formal_list . ')' ':' TYPEID '{' dummy_expr '}'

    ')'  shift, and go to state 25


state 22

   10 feature: OBJECTID ':' TYPEID . dummy_expr
   11        | OBJECTID ':' TYPEID . ASSIGN dummy_expr

    ASSIGN  shift, and go to state 26

    $default  reduce using rule 13 (dummy_expr)

    dummy_expr  go to state 27


state 23

    8 feature_list: feature_list feature ';' .

    $default  reduce using rule 8 (feature_list)


state 24

    5 class: CLASS TYPEID INHERITS TYPEID '{' feature_list '}' .

    $default  reduce using rule 5 (class)


state 25

    9 feature: OBJECTID '(' dummy_formal_list ')' . ':' TYPEID '{' dummy_expr '}'

    ':'  shift, and go to state 28


state 26

   11 feature: OBJECTID ':' TYPEID ASSIGN . dummy_expr

    $default  reduce using rule 13 (dummy_expr)

    dummy_expr  go to state 29


state 27

   10 feature: OBJECTID ':' TYPEID dummy_expr .

    $default  reduce using rule 10 (feature)


state 28

    9 feature: OBJECTID '(' dummy_formal_list ')' ':' . TYPEID '{' dummy_expr '}'

    TYPEID  shift, and go to state 30


state 29

   11 feature: OBJECTID ':' TYPEID ASSIGN dummy_expr .

    $default  reduce using rule 11 (feature)


state 30

    9 feature: OBJECTID '(' dummy_formal_list ')' ':' TYPEID . '{' dummy_expr '}'

    '{'  shift, and go to state 31


state 31

    9 feature: OBJECTID '(' dummy_formal_list ')' ':' TYPEID '{' . dummy_expr '}'

    $default  reduce using rule 13 (dummy_expr)

    dummy_expr  go to state 32


state 32

    9 feature: OBJECTID '(' dummy_formal_list ')' ':' TYPEID '{' dummy_expr . '}'

    '}'  shift, and go to state 33


state 33

    9 feature: OBJECTID '(' dummy_formal_list ')' ':' TYPEID '{' dummy_expr '}' .

    $default  reduce using rule 9 (feature)
